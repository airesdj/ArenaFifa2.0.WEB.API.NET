USE `arenafifadb`;



DELIMITER $$
DROP PROCEDURE IF EXISTS `spGetSummaryHallOfFame` $$
CREATE PROCEDURE `spGetSummaryHallOfFame`()
begin      
	DECLARE _psnIDSerieAH2H VARCHAR(50) DEFAULT "";
	DECLARE _teamNameSerieAH2H VARCHAR(50) DEFAULT "";
	DECLARE _psnIDSerieAFUT VARCHAR(50) DEFAULT "";
	DECLARE _teamNameSerieAFUT VARCHAR(50) DEFAULT "";
	DECLARE _psnIDSerieAPRO VARCHAR(50) DEFAULT "";
	DECLARE _teamNameSerieAPRO VARCHAR(50) DEFAULT "";
	DECLARE _psnIDCDM VARCHAR(50) DEFAULT "";
	DECLARE _teamNameCDM VARCHAR(50) DEFAULT "";
	DECLARE _psnIDUCL VARCHAR(50) DEFAULT "";
	DECLARE _teamNameUCL VARCHAR(50) DEFAULT "";
	DECLARE _psnIDSCP VARCHAR(50) DEFAULT "";
	DECLARE _teamNameSCP VARCHAR(50) DEFAULT "";
	DECLARE _championshipID INTEGER DEFAULT 0;
	DECLARE _seasonIDCurrent INTEGER DEFAULT 0;
	DECLARE _seasonID INTEGER DEFAULT 0;
	
	SET _seasonIDCurrent = fcGetIdTempCurrent();

	SELECT ID_CAMPEONATO, ID_TEMPORADA into _championshipID, _seasonID
	FROM TB_CAMPEONATO
	WHERE ID_TEMPORADA < _seasonIDCurrent AND SG_TIPO_CAMPEONATO = "DIV1" 
	ORDER BY ID_CAMPEONATO DESC LIMIT 1;
	
	SELECT ID_CAMPEONATO, ID_TEMPORADA into _championshipID, _seasonID
	FROM TB_CAMPEONATO
	WHERE ID_TEMPORADA < _seasonIDCurrent AND SG_TIPO_CAMPEONATO = "DIV1" 
	ORDER BY ID_CAMPEONATO DESC LIMIT 1;
	
	SELECT U.PSN_ID, T.NM_TIME into _psnIDSerieAH2H, _teamNameSerieAH2H
	FROM TB_HISTORICO_CONQUISTA H, TB_USUARIO U, TB_TIME T
	WHERE ID_TEMPORADA = _seasonID AND ID_CAMPEONATO = _championshipID
	AND H.ID_USUARIO_CAMPEAO = U.ID_USUARIO AND H.ID_TIME_CAMPEAO = T.ID_TIME;
	

	SELECT ID_CAMPEONATO, ID_TEMPORADA into _championshipID, _seasonID
	FROM TB_CAMPEONATO
	WHERE ID_TEMPORADA < _seasonIDCurrent AND SG_TIPO_CAMPEONATO = "FUT1" 
	ORDER BY ID_CAMPEONATO DESC LIMIT 1;
	
	SELECT U.PSN_ID, T.NM_TIME into _psnIDSerieAFUT, _teamNameSerieAFUT
	FROM TB_HISTORICO_CONQUISTA_FUT H, TB_USUARIO U, TB_TIME T
	WHERE ID_TEMPORADA = _seasonID AND ID_CAMPEONATO = _championshipID
	AND H.ID_USUARIO_CAMPEAO = U.ID_USUARIO AND H.ID_TIME_CAMPEAO = T.ID_TIME;
	

	SELECT ID_CAMPEONATO, ID_TEMPORADA into _championshipID, _seasonID
	FROM TB_CAMPEONATO
	WHERE ID_TEMPORADA < _seasonIDCurrent AND SG_TIPO_CAMPEONATO = "PRO1" 
	ORDER BY ID_CAMPEONATO DESC LIMIT 1;
	
	SELECT U.PSN_ID, T.NM_TIME into _psnIDSerieAPRO, _teamNameSerieAPRO
	FROM TB_HISTORICO_CONQUISTA_PRO H, TB_USUARIO U, TB_TIME T
	WHERE ID_TEMPORADA = _seasonID AND ID_CAMPEONATO = _championshipID
	AND H.ID_USUARIO_CAMPEAO = U.ID_USUARIO AND H.ID_TIME_CAMPEAO = T.ID_TIME;
	
	
	
	SELECT ID_CAMPEONATO, ID_TEMPORADA into _championshipID, _seasonID
	FROM TB_CAMPEONATO
	WHERE ID_TEMPORADA < _seasonIDCurrent AND SG_TIPO_CAMPEONATO = "PRO1" 
	ORDER BY ID_CAMPEONATO DESC LIMIT 1;
	
	SELECT U.PSN_ID, T.NM_TIME into _psnIDSerieAPRO, _teamNameSerieAPRO
	FROM TB_HISTORICO_CONQUISTA_PRO H, TB_USUARIO U, TB_TIME T
	WHERE ID_TEMPORADA = _seasonID AND ID_CAMPEONATO = _championshipID
	AND H.ID_USUARIO_CAMPEAO = U.ID_USUARIO AND H.ID_TIME_CAMPEAO = T.ID_TIME;
	

	SELECT ID_CAMPEONATO, ID_TEMPORADA into _championshipID, _seasonID
	FROM TB_CAMPEONATO
	WHERE ID_TEMPORADA < _seasonIDCurrent AND SG_TIPO_CAMPEONATO = "CPDM" 
	ORDER BY ID_CAMPEONATO DESC LIMIT 1;
	
	SELECT U.PSN_ID, T.NM_TIME into _psnIDCDM, _teamNameCDM
	FROM TB_HISTORICO_CONQUISTA H, TB_USUARIO U, TB_TIME T
	WHERE ID_TEMPORADA = _seasonID AND ID_CAMPEONATO = _championshipID
	AND H.ID_USUARIO_CAMPEAO = U.ID_USUARIO AND H.ID_TIME_CAMPEAO = T.ID_TIME;
	

	SELECT ID_CAMPEONATO, ID_TEMPORADA into _championshipID, _seasonID
	FROM TB_CAMPEONATO
	WHERE ID_TEMPORADA < _seasonIDCurrent AND SG_TIPO_CAMPEONATO = "CPGL" AND IN_CAMPEONATO_GRUPO = true
	ORDER BY ID_CAMPEONATO DESC LIMIT 1;
	
	SELECT U.PSN_ID, T.NM_TIME into _psnIDUCL, _teamNameUCL
	FROM TB_HISTORICO_CONQUISTA H, TB_USUARIO U, TB_TIME T
	WHERE ID_TEMPORADA = _seasonID AND ID_CAMPEONATO = _championshipID
	AND H.ID_USUARIO_CAMPEAO = U.ID_USUARIO AND H.ID_TIME_CAMPEAO = T.ID_TIME;
	

	SELECT ID_CAMPEONATO, ID_TEMPORADA into _championshipID, _seasonID
	FROM TB_CAMPEONATO
	WHERE ID_TEMPORADA < _seasonIDCurrent AND SG_TIPO_CAMPEONATO = "MDCL" AND IN_CAMPEONATO_GRUPO = false
	ORDER BY ID_CAMPEONATO DESC LIMIT 1;
	
	SELECT U.PSN_ID, T.NM_TIME into _psnIDSCP, _teamNameSCP
	FROM TB_HISTORICO_CONQUISTA H, TB_USUARIO U, TB_TIME T
	WHERE ID_TEMPORADA = _seasonID AND ID_CAMPEONATO = _championshipID
	AND H.ID_USUARIO_CAMPEAO = U.ID_USUARIO AND H.ID_TIME_CAMPEAO = T.ID_TIME;
	
	SELECT _psnIDSerieAH2H as psnIDH2HChampion, _teamNameSerieAH2H as teamNameH2HChampion,
		   _psnIDSerieAFUT as psnIDFUTChampion, _teamNameSerieAFUT as teamNameFUTChampion,
		   _psnIDSerieAPRO as psnIDPROChampion, _teamNameSerieAPRO as teamNamePROChampion,
		   _psnIDCDM as psnIDCDMChampion, _teamNameCDM as teamNameCDMChampion,
		   _psnIDUCL as psnIDUCLChampion, _teamNameUCL as teamNameUCLChampion,
		   _psnIDSCP as psnIDSCPChampion, _teamNameSCP as teamNameSCPChampion;
   
End$$
DELIMITER ;



DELIMITER $$
DROP PROCEDURE IF EXISTS `spGetSummaryRanking` $$
CREATE PROCEDURE `spGetSummaryRanking`()
begin      
	DECLARE _goalsH2H INTEGER DEFAULT 0;
	DECLARE _goalsFUT INTEGER DEFAULT 0;
	DECLARE _goalsPRO INTEGER DEFAULT 0;
	DECLARE _seasonNameH2H VARCHAR(50) DEFAULT "";
	DECLARE _seasonNameFUT VARCHAR(50) DEFAULT "";
	DECLARE _seasonNamePRO VARCHAR(50) DEFAULT "";
	DECLARE _seasonID INTEGER DEFAULT 0;
	
	SET _seasonID = fcGetIdTempCurrent();

	SELECT NM_TEMPORADA into _seasonNameH2H
	FROM TB_TEMPORADA
	WHERE ID_TEMPORADA = _seasonID;
	
	SELECT SUM(T.QT_GOLS_TIME_CASA+T.QT_GOLS_TIME_VISITANTE) into _goalsH2H
	FROM TB_TABELA_JOGO T
	WHERE T.ID_CAMPEONATO IN (SELECT ID_CAMPEONATO FROM TB_CAMPEONATO WHERE ID_TEMPORADA = _seasonID AND FIND_IN_SET(SG_TIPO_CAMPEONATO,fcGetAllSiglaByMode('H2H')))
	AND T.QT_GOLS_TIME_CASA IS NOT NULL;
	
	SELECT SUM(T.QT_GOLS_TIME_CASA+T.QT_GOLS_TIME_VISITANTE) into _goalsFUT
	FROM TB_TABELA_JOGO T
	WHERE T.ID_CAMPEONATO IN (SELECT ID_CAMPEONATO FROM TB_CAMPEONATO WHERE ID_TEMPORADA = _seasonID AND FIND_IN_SET(SG_TIPO_CAMPEONATO,fcGetAllSiglaByMode('FUT')))
	AND T.QT_GOLS_TIME_CASA IS NOT NULL;
	
	SELECT SUM(T.QT_GOLS_TIME_CASA+T.QT_GOLS_TIME_VISITANTE) into _goalsPRO
	FROM TB_TABELA_JOGO T
	WHERE T.ID_CAMPEONATO IN (SELECT ID_CAMPEONATO FROM TB_CAMPEONATO WHERE ID_TEMPORADA = _seasonID AND FIND_IN_SET(SG_TIPO_CAMPEONATO,fcGetAllSiglaByMode('PRO')))
	AND T.QT_GOLS_TIME_CASA IS NOT NULL;
	
	IF _goalsH2H IS NULL THEN
	
		SET _goalsH2H = 0;
	
	END IF;
	
	IF _goalsFUT IS NULL THEN
	
		SET _goalsFUT = 0;
	
	END IF;
	
	IF _goalsPRO IS NULL THEN
	
		SET _goalsPRO = 0;
	
	END IF;
	
	SELECT _goalsH2H as totalGoalsH2H, _goalsFUT as totalGoalsFUT,
		   _goalsPRO as totalGoalsPRO, _seasonNameH2H as seasonNameH2H,
		   _seasonNameH2H as seasonNameFUT, _seasonNameH2H as seasonNamePRO;
   
End$$
DELIMITER ;




DELIMITER $$
DROP PROCEDURE IF EXISTS `spGetSummaryMyMatches` $$
CREATE PROCEDURE `spGetSummaryMyMatches`(pIdUsu INTEGER)
begin      
	DECLARE _totalGoals INTEGER DEFAULT 0;
	DECLARE _totalGoalsHome INTEGER DEFAULT 0;
	DECLARE _totalGoalsAway INTEGER DEFAULT 0;
	DECLARE _totalMatchesHome INTEGER DEFAULT 0;
	DECLARE _totalMatchesAway INTEGER DEFAULT 0;
	DECLARE _totalMatches INTEGER DEFAULT 0;
	DECLARE _average INTEGER DEFAULT 0;
	DECLARE _teamNameH2H VARCHAR(50) DEFAULT "";
	DECLARE _teamNameFUT VARCHAR(50) DEFAULT "";
	DECLARE _teamNamePRO VARCHAR(50) DEFAULT "";
	DECLARE _championshipID INTEGER DEFAULT 0;
	
	SELECT NM_TIME into _teamNameH2H FROM TB_TIME WHERE ID_TIME = fcGetCurrentIdTimeH2H(pIdUsu);
	SELECT NM_TIME into _teamNameFUT FROM TB_TIME WHERE ID_TIME = fcGetCurrentIdTimeFUT(pIdUsu);
	SELECT NM_TIME into _teamNamePRO FROM TB_TIME WHERE ID_TIME = fcGetCurrentIdTimePRO(pIdUsu);
	
	SELECT COUNT(1) into _totalMatchesHome
	FROM TB_TABELA_JOGO
	WHERE QT_GOLS_TIME_CASA IS NOT NULL AND ID_USUARIO_TIME_CASA = pIdUsu;
	
	SELECT COUNT(1) into _totalMatchesAway
	FROM TB_TABELA_JOGO
	WHERE QT_GOLS_TIME_CASA IS NOT NULL AND ID_USUARIO_TIME_VISITANTE = pIdUsu;
	
	SET _totalMatches = COALESCE(_totalMatchesHome, 0) + COALESCE(_totalMatchesAway, 0);
	
	SELECT SUM(QT_GOLS_TIME_CASA) into _totalGoalsHome
	FROM TB_TABELA_JOGO
	WHERE QT_GOLS_TIME_CASA IS NOT NULL AND ID_USUARIO_TIME_CASA = pIdUsu;
	
	SELECT SUM(QT_GOLS_TIME_VISITANTE) into _totalGoalsAway
	FROM TB_TABELA_JOGO
	WHERE QT_GOLS_TIME_CASA IS NOT NULL AND ID_USUARIO_TIME_VISITANTE = pIdUsu;
	
	SET _totalGoals = COALESCE(_totalGoalsHome, 0) + COALESCE(_totalGoalsAway, 0);
	
	IF _totalMatches > 0 THEN
	
		SET _average = (_totalGoals DIV _totalMatches);
	
	END IF;
	
	SELECT _teamNameH2H as teamNameH2H, _teamNameFUT as teamNameFUT,
		   _teamNamePRO as teamNamePRO, _totalMatches as totalMatches,
		   _totalGoals as totalGoals, COALESCE(_average, 0) as averageGoals;
   
End$$
DELIMITER ;





DELIMITER $$
DROP PROCEDURE IF EXISTS `spGetSummaryMyMatches` $$
CREATE PROCEDURE `spGetSummaryMyMatches`(pIdUsu INTEGER)
begin      
	DECLARE _totalGoals INTEGER DEFAULT 0;
	DECLARE _totalGoalsHome INTEGER DEFAULT 0;
	DECLARE _totalGoalsAway INTEGER DEFAULT 0;
	DECLARE _totalMatchesHome INTEGER DEFAULT 0;
	DECLARE _totalMatchesAway INTEGER DEFAULT 0;
	DECLARE _totalMatches INTEGER DEFAULT 0;
	DECLARE _average INTEGER DEFAULT 0;
	DECLARE _teamNameH2H VARCHAR(50) DEFAULT "";
	DECLARE _teamNameFUT VARCHAR(50) DEFAULT "";
	DECLARE _teamNamePRO VARCHAR(50) DEFAULT "";
	DECLARE _championshipID INTEGER DEFAULT 0;
	
	SELECT NM_TIME into _teamNameH2H FROM TB_TIME WHERE ID_TIME = fcGetCurrentIdTimeH2H(pIdUsu);
	SELECT NM_TIME into _teamNameFUT FROM TB_TIME WHERE ID_TIME = fcGetCurrentIdTimeFUT(pIdUsu);
	SELECT NM_TIME into _teamNamePRO FROM TB_TIME WHERE ID_TIME = fcGetCurrentIdTimePRO(pIdUsu);
	
	SELECT COUNT(1) into _totalMatchesHome
	FROM TB_TABELA_JOGO
	WHERE QT_GOLS_TIME_CASA IS NOT NULL AND ID_USUARIO_TIME_CASA = pIdUsu;
	
	SELECT COUNT(1) into _totalMatchesAway
	FROM TB_TABELA_JOGO
	WHERE QT_GOLS_TIME_CASA IS NOT NULL AND ID_USUARIO_TIME_VISITANTE = pIdUsu;
	
	SET _totalMatches = COALESCE(_totalMatchesHome, 0) + COALESCE(_totalMatchesAway, 0);
	
	SELECT SUM(QT_GOLS_TIME_CASA) into _totalGoalsHome
	FROM TB_TABELA_JOGO
	WHERE QT_GOLS_TIME_CASA IS NOT NULL AND ID_USUARIO_TIME_CASA = pIdUsu;
	
	SELECT SUM(QT_GOLS_TIME_VISITANTE) into _totalGoalsAway
	FROM TB_TABELA_JOGO
	WHERE QT_GOLS_TIME_CASA IS NOT NULL AND ID_USUARIO_TIME_VISITANTE = pIdUsu;
	
	SET _totalGoals = COALESCE(_totalGoalsHome, 0) + COALESCE(_totalGoalsAway, 0);
	
	IF _totalMatches > 0 THEN
	
		SET _average = (_totalGoals DIV _totalMatches);
	
	END IF;
	
	SELECT _teamNameH2H as teamNameH2H, _teamNameFUT as teamNameFUT,
		   _teamNamePRO as teamNamePRO, _totalMatches as totalMatches,
		   _totalGoals as totalGoals, COALESCE(_average, 0) as averageGoals;
   
End$$
DELIMITER ;





DELIMITER $$
DROP PROCEDURE IF EXISTS `spGetTotalsMyMatches` $$
CREATE PROCEDURE `spGetTotalsMyMatches`(pTypeMode VARCHAR(3), pTypeMyMactches VARCHAR(8), pIdUsu INTEGER)
begin      
	DECLARE _totalGoals INTEGER DEFAULT 0;
	DECLARE _totalGoalsFOR INTEGER DEFAULT 0;
	DECLARE _totalGoalsAGAINST INTEGER DEFAULT 0;
	DECLARE _totalMatchesToPlay INTEGER DEFAULT 0;
	DECLARE _totalMatchesDelayed INTEGER DEFAULT 0;
	DECLARE _totalMatches INTEGER DEFAULT 0;
	DECLARE _totalWins INTEGER DEFAULT 0;
	DECLARE _totalLosses INTEGER DEFAULT 0;
	DECLARE _teamIDH2H INTEGER DEFAULT 0;
	DECLARE _nationalTeamID INTEGER DEFAULT 0;
	DECLARE _teamIDFUT INTEGER DEFAULT 0;
	DECLARE _teamIDPRO INTEGER DEFAULT 0;
	DECLARE _totalAux INTEGER DEFAULT 0;
	DECLARE _totalAux2 INTEGER DEFAULT 0;
	DECLARE _teamNameH2H VARCHAR(50) DEFAULT "";
	DECLARE _nationalTeamName VARCHAR(50) DEFAULT "";
	DECLARE _teamNameFUT VARCHAR(50) DEFAULT "";
	DECLARE _teamNamePRO VARCHAR(50) DEFAULT "";

	IF pTypeMode = "H2H" THEN
	
		SET _teamIDH2H = fcGetCurrentIdTimeH2H(pIdUsu);
		SET _nationalTeamID = fcGetCurrentIdTimeCDM(pIdUsu);

		SET _nationalTeamID = COALESCE(_nationalTeamID, 0);
        
		SELECT NM_TIME into _teamNameH2H FROM TB_TIME WHERE ID_TIME = _teamIDH2H;
		SELECT NM_TIME into _nationalTeamName FROM TB_TIME WHERE ID_TIME = _nationalTeamID;
		
		SET _teamNameH2H = COALESCE(_teamNameH2H, "");
		SET _nationalTeamName = COALESCE(_nationalTeamName, "");
		
		IF pTypeMyMactches = "SCORERS" OR pTypeMyMactches = "DONE" THEN
		
			SELECT count(1) INTO _totalMatches
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL
			AND (ID_TIME_CASA in (_teamIDH2H, _nationalTeamID) OR ID_TIME_VISITANTE in (_teamIDH2H, _nationalTeamID));
		
		END IF;
		
		IF pTypeMyMactches = "NEXT" THEN
		
			SELECT count(1) INTO _totalMatchesToPlay
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NULL
			AND (ID_TIME_CASA in (_teamIDH2H, _nationalTeamID) OR ID_TIME_VISITANTE in (_teamIDH2H, _nationalTeamID));
		
			SELECT count(1) INTO _totalMatchesDelayed
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NULL AND DT_TABELA_FIM_JOGO < CURRENT_DATE()
			AND (ID_TIME_CASA in (_teamIDH2H, _nationalTeamID) OR ID_TIME_VISITANTE in (_teamIDH2H, _nationalTeamID));
		
		ELSEIF pTypeMyMactches = "DONE" THEN
		
			SELECT count(1) INTO _totalWins
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL AND QT_GOLS_TIME_CASA > QT_GOLS_TIME_VISITANTE
			AND ID_TIME_CASA in (_teamIDH2H, _nationalTeamID);
		
			SELECT count(1) INTO _totalAux
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL AND QT_GOLS_TIME_VISITANTE > QT_GOLS_TIME_CASA
			AND ID_TIME_VISITANTE in (_teamIDH2H, _nationalTeamID);
			
			SET _totalWins = _totalWins + _totalAux;
		
			SELECT count(1) INTO _totalLosses
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL AND QT_GOLS_TIME_CASA < QT_GOLS_TIME_VISITANTE
			AND ID_TIME_CASA in (_teamIDH2H, _nationalTeamID);
		
			SELECT count(1) INTO _totalAux
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL AND QT_GOLS_TIME_VISITANTE < QT_GOLS_TIME_CASA
			AND ID_TIME_VISITANTE in (_teamIDH2H, _nationalTeamID);
			
			SET _totalLosses = _totalLosses + _totalAux;
		
			SELECT SUM(QT_GOLS_TIME_CASA) INTO _totalGoals
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL
			AND ID_TIME_CASA in (_teamIDH2H, _nationalTeamID);
		
			SELECT SUM(QT_GOLS_TIME_VISITANTE) INTO _totalAux
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL
			AND ID_TIME_VISITANTE in (_teamIDH2H, _nationalTeamID);
			
			SET _totalGoals = COALESCE(_totalGoals, 0) + COALESCE(_totalAux, 0);
		
		ELSEIF pTypeMyMactches = "SCORERS" THEN
		
			SELECT SUM(QT_GOLS_TIME_CASA), SUM(QT_GOLS_TIME_VISITANTE) INTO _totalGoalsFOR, _totalGoalsAGAINST
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL
			AND ID_TIME_CASA in (_teamIDH2H, _nationalTeamID);
		
			SELECT SUM(QT_GOLS_TIME_VISITANTE), SUM(QT_GOLS_TIME_CASA) INTO _totalAux, _totalAux2
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL
			AND ID_TIME_VISITANTE in (_teamIDH2H, _nationalTeamID);
			
			SET _totalGoalsFOR = COALESCE(_totalGoalsFOR, 0) + COALESCE(_totalAux, 0);
			SET _totalGoalsAGAINST = COALESCE(_totalGoalsAGAINST, 0) + COALESCE(_totalAux2, 0);
		
		END IF;

	ELSEIF pTypeMode = "FUT" THEN
	
		SET _teamIDFUT = fcGetCurrentIdTimeFUT(pIdUsu);

		SELECT NM_TIME into _teamNameFUT FROM TB_TIME WHERE ID_TIME = _teamIDFUT;
		
		SET _teamNameFUT = COALESCE(_teamNameFUT, "");
		
		IF pTypeMyMactches = "NEXT" THEN
		
			SELECT count(1) INTO _totalMatchesToPlay
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NULL
			AND (ID_TIME_CASA in (_teamIDFUT) OR ID_TIME_VISITANTE in (_teamIDFUT));
		
			SELECT count(1) INTO _totalMatchesDelayed
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NULL AND DT_TABELA_FIM_JOGO < CURRENT_DATE()
			AND (ID_TIME_CASA in (_teamIDFUT) OR ID_TIME_VISITANTE in (_teamIDFUT));
		
		ELSEIF pTypeMyMactches = "DONE" THEN
		
			SELECT count(1) INTO _totalMatches
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL
			AND (ID_TIME_CASA in (_teamIDFUT) OR ID_TIME_VISITANTE in (_teamIDFUT));
		
			SELECT count(1) INTO _totalWins
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL AND QT_GOLS_TIME_CASA > QT_GOLS_TIME_VISITANTE
			AND ID_TIME_CASA in (_teamIDFUT);
		
			SELECT count(1) INTO _totalAux
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL AND QT_GOLS_TIME_VISITANTE > QT_GOLS_TIME_CASA
			AND ID_TIME_VISITANTE in (_teamIDFUT);
			
			SET _totalWins = _totalWins + _totalAux;
		
			SELECT count(1) INTO _totalLosses
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL AND QT_GOLS_TIME_CASA < QT_GOLS_TIME_VISITANTE
			AND ID_TIME_CASA in (_teamIDFUT);
		
			SELECT count(1) INTO _totalAux
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL AND QT_GOLS_TIME_VISITANTE < QT_GOLS_TIME_CASA
			AND ID_TIME_VISITANTE in (_teamIDFUT);
			
			SET _totalLosses = _totalLosses + _totalAux;
		
			SELECT SUM(QT_GOLS_TIME_CASA) INTO _totalGoals
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL
			AND ID_TIME_CASA in (_teamIDFUT);
		
			SELECT SUM(QT_GOLS_TIME_VISITANTE) INTO _totalAux
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL
			AND ID_TIME_VISITANTE in (_teamIDFUT);
			
			SET _totalGoals = COALESCE(_totalGoals, 0) + COALESCE(_totalAux, 0);
		
		END IF;

	ELSEIF pTypeMode = "PRO" THEN
	
		SET _teamIDPRO = fcGetCurrentIdTimePRO(pIdUsu);
	
		SELECT NM_TIME into _teamNamePRO FROM TB_TIME WHERE ID_TIME = _teamIDPRO;
		
		SET _teamNamePRO = COALESCE(_teamNamePRO, "");
		
		IF pTypeMyMactches = "SCORERS" OR pTypeMyMactches = "DONE" THEN
		
			SELECT count(1) INTO _totalMatches
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL
			AND (ID_TIME_CASA in (_teamIDPRO) OR ID_TIME_VISITANTE in (_teamIDPRO));
		
		END IF;
		
		IF pTypeMyMactches = "NEXT" THEN
		
			SELECT count(1) INTO _totalMatchesToPlay
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NULL
			AND (ID_TIME_CASA in (_teamIDPRO) OR ID_TIME_VISITANTE in (_teamIDPRO));
		
			SELECT count(1) INTO _totalMatchesDelayed
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NULL AND DT_TABELA_FIM_JOGO < CURRENT_DATE()
			AND (ID_TIME_CASA in (_teamIDPRO) OR ID_TIME_VISITANTE in (_teamIDPRO));
		
		ELSEIF pTypeMyMactches = "DONE" THEN
		
			SELECT count(1) INTO _totalWins
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL AND QT_GOLS_TIME_CASA > QT_GOLS_TIME_VISITANTE
			AND ID_TIME_CASA in (_teamIDPRO);
		
			SELECT count(1) INTO _totalAux
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL AND QT_GOLS_TIME_VISITANTE > QT_GOLS_TIME_CASA
			AND ID_TIME_VISITANTE in (_teamIDPRO);
			
			SET _totalWins = _totalWins + _totalAux;
		
			SELECT count(1) INTO _totalLosses
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL AND QT_GOLS_TIME_CASA < QT_GOLS_TIME_VISITANTE
			AND ID_TIME_CASA in (_teamIDPRO);
		
			SELECT count(1) INTO _totalAux
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL AND QT_GOLS_TIME_VISITANTE < QT_GOLS_TIME_CASA
			AND ID_TIME_VISITANTE in (_teamIDPRO);
			
			SET _totalLosses = _totalLosses + _totalAux;
		
			SELECT SUM(QT_GOLS_TIME_CASA) INTO _totalGoals
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL
			AND ID_TIME_CASA in (_teamIDPRO);
		
			SELECT SUM(QT_GOLS_TIME_VISITANTE) INTO _totalAux
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL
			AND ID_TIME_VISITANTE in (_teamIDPRO);
			
			SET _totalGoals = COALESCE(_totalGoals, 0) + COALESCE(_totalAux, 0);
		
		ELSEIF pTypeMyMactches = "SCORERS" THEN
		
			SELECT SUM(QT_GOLS_TIME_CASA), SUM(QT_GOLS_TIME_VISITANTE) INTO _totalGoalsFOR, _totalGoalsAGAINST
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL
			AND ID_TIME_CASA in (_teamIDPRO);
		
			SELECT SUM(QT_GOLS_TIME_VISITANTE), SUM(QT_GOLS_TIME_CASA) INTO _totalAux, _totalAux2
			FROM TB_TABELA_JOGO 
			WHERE QT_GOLS_TIME_CASA IS NOT NULL
			AND ID_TIME_VISITANTE in (_teamIDPRO);
			
			SET _totalGoalsFOR = COALESCE(_totalGoalsFOR, 0) + COALESCE(_totalAux, 0);
			SET _totalGoalsAGAINST = COALESCE(_totalGoalsAGAINST, 0) + COALESCE(_totalAux2, 0);
		
		END IF;

	END IF;
	
	SELECT _totalGoals as totalGoals, _totalGoalsFOR as totalGoalsFOR,
		   _totalGoalsAGAINST as totalGoalsAGAINST, _totalMatchesToPlay as totalMatchesToPlay,
		   _totalMatchesDelayed as totalMatchesDelayed, _totalMatches as totalMatches,
		   _totalWins as totalWins, _totalLosses as totalLosses,
		   _teamNameH2H as teamNameH2H, _nationalTeamName as nationalTeamName,
		   _teamNameFUT as teamNameFUT, _teamNamePRO as teamNamePRO,
		   _teamIDH2H as teamIDH2H, _nationalTeamID as nationalTeamID,
		   _teamIDFUT as teamIDFUT, _teamIDPRO as teamIDPRO;
		   
End$$
DELIMITER ;




DELIMITER $$
DROP PROCEDURE IF EXISTS `spGetSummaryRankingListScorers` $$
CREATE PROCEDURE `spGetSummaryRankingListScorers`(pMode VARCHAR(3), pIdUsu INTEGER, pInSummary TINYINT, pIdCamp INTEGER)
begin      
	DECLARE _seasonID INTEGER DEFAULT 0;
	DECLARE _nationalTeamID INTEGER DEFAULT 0;
	DECLARE _teamID INTEGER DEFAULT 0;
	
	SET _seasonID = fcGetIdTempCurrent();
	
	IF pIdUsu = 0 THEN
	
		IF pInSummary = TRUE THEN

			SELECT X.ID_GOLEADOR, G.NM_GOLEADOR, X.QT_GOLS_MARCADOS, T.NM_TIME, T.DS_Tipo, G.NM_GOLEADOR_COMPLETO, fcGetCurrentPsnIDByTime(0,T.ID_TIME) as PSN_ID, '2' as QueryID
			FROM (SELECT J.ID_GOLEADOR, J.ID_TIME, SUM(J.QT_GOLS) as QT_GOLS_MARCADOS
			FROM TB_GOLEADOR_JOGO J
			WHERE J.ID_CAMPEONATO IN (SELECT C.ID_CAMPEONATO FROM TB_CAMPEONATO C WHERE FIND_IN_SET(SG_TIPO_CAMPEONATO,fcGetAllSiglaByMode(pMode)))
			GROUP BY J.ID_GOLEADOR, J.ID_TIME) X, TB_GOLEADOR G, TB_TIME T
			WHERE G.ID_TIME IN (SELECT CT.ID_TIME FROM TB_CAMPEONATO_TIME CT, TB_CAMPEONATO C WHERE FIND_IN_SET(SG_TIPO_CAMPEONATO,fcGetAllSiglaByMode(pMode)) AND CT.ID_CAMPEONATO = C.ID_CAMPEONATO GROUP BY CT.ID_TIME)
			AND X.ID_GOLEADOR = G.ID_GOLEADOR
			AND X.ID_TIME= G.ID_TIME
			AND X.ID_TIME= T.ID_TIME
			AND G.ID_TIME = T.ID_TIME
			ORDER BY X.QT_GOLS_MARCADOS DESC, G.NM_GOLEADOR LIMIT 5;	
		
		ELSEIF pIdCamp = 0 THEN

			SELECT X.ID_GOLEADOR, G.NM_GOLEADOR, X.QT_GOLS_MARCADOS, T.NM_TIME, T.DS_Tipo, G.NM_GOLEADOR_COMPLETO, fcGetCurrentPsnIDByTime(0,T.ID_TIME) as PSN_ID, '3' as QueryID
			FROM (SELECT J.ID_GOLEADOR, J.ID_TIME, SUM(J.QT_GOLS) as QT_GOLS_MARCADOS
			FROM TB_GOLEADOR_JOGO J
			WHERE J.ID_CAMPEONATO IN (SELECT C.ID_CAMPEONATO FROM TB_CAMPEONATO C WHERE FIND_IN_SET(SG_TIPO_CAMPEONATO,fcGetAllSiglaByMode(pMode)))
			GROUP BY J.ID_GOLEADOR, J.ID_TIME) X, TB_GOLEADOR G, TB_TIME T
			WHERE G.ID_TIME IN (SELECT CT.ID_TIME FROM TB_CAMPEONATO_TIME CT, TB_CAMPEONATO C WHERE FIND_IN_SET(SG_TIPO_CAMPEONATO,fcGetAllSiglaByMode(pMode)) AND CT.ID_CAMPEONATO = C.ID_CAMPEONATO GROUP BY CT.ID_TIME)
			AND X.ID_GOLEADOR = G.ID_GOLEADOR
			AND X.ID_TIME= G.ID_TIME
			AND X.ID_TIME= T.ID_TIME
			AND G.ID_TIME = T.ID_TIME
			ORDER BY X.QT_GOLS_MARCADOS DESC, G.NM_GOLEADOR;	
		
		ELSE

			SELECT X.ID_GOLEADOR, G.NM_GOLEADOR, X.QT_GOLS_MARCADOS, T.NM_TIME, T.DS_Tipo, G.NM_GOLEADOR_COMPLETO, fcGetCurrentPsnIDByTime(0,T.ID_TIME) as PSN_ID, '4' as QueryID
			FROM (SELECT J.ID_GOLEADOR, J.ID_TIME, SUM(J.QT_GOLS) as QT_GOLS_MARCADOS
			FROM TB_GOLEADOR_JOGO J
			WHERE J.ID_CAMPEONATO = pIdCamp
			GROUP BY J.ID_GOLEADOR, J.ID_TIME) X, TB_GOLEADOR G, TB_TIME T
			WHERE G.ID_TIME IN (SELECT CT.ID_TIME FROM TB_CAMPEONATO_TIME CT WHERE CT.ID_CAMPEONATO = pIdCamp)
			AND X.ID_GOLEADOR = G.ID_GOLEADOR
			AND X.ID_TIME= G.ID_TIME
			AND X.ID_TIME= T.ID_TIME
			AND G.ID_TIME = T.ID_TIME
			ORDER BY X.QT_GOLS_MARCADOS DESC, G.NM_GOLEADOR;	
		
		END IF;

	ELSE
	
		IF pMode = "H2H" THEN

			SET _nationalTeamID = fcGetCurrentIdTimeCDM(pIdUsu);
			SET _teamID = fcGetCurrentIdTimeH2H(pIdUsu);
			
			IF pInSummary = TRUE THEN
			
				SELECT X.ID_GOLEADOR, G.NM_GOLEADOR, X.QT_GOLS_MARCADOS, T.NM_TIME, T.DS_Tipo, G.NM_GOLEADOR_COMPLETO, fcGetCurrentPsnIDByTime(0,T.ID_TIME) as PSN_ID
				FROM (SELECT J.ID_GOLEADOR, J.ID_TIME, SUM(J.QT_GOLS) as QT_GOLS_MARCADOS
				FROM TB_GOLEADOR_JOGO J
				WHERE J.ID_CAMPEONATO IN (SELECT C.ID_CAMPEONATO FROM TB_CAMPEONATO C WHERE FIND_IN_SET(SG_TIPO_CAMPEONATO,fcGetAllSiglaByMode(pMode)))
				GROUP BY J.ID_GOLEADOR, J.ID_TIME) X, TB_GOLEADOR G, TB_TIME T
				WHERE G.ID_TIME IN (SELECT CT.ID_TIME FROM TB_CAMPEONATO_TIME CT, TB_CAMPEONATO C WHERE FIND_IN_SET(SG_TIPO_CAMPEONATO,fcGetAllSiglaByMode(pMode)) AND CT.ID_CAMPEONATO = C.ID_CAMPEONATO GROUP BY CT.ID_TIME)
				AND T.ID_TIME IN (_teamID,_nationalTeamID)
				AND X.ID_GOLEADOR = G.ID_GOLEADOR
				AND G.ID_TIME = T.ID_TIME
				AND X.ID_TIME= G.ID_TIME
				AND X.ID_TIME= T.ID_TIME
				ORDER BY X.QT_GOLS_MARCADOS DESC, G.NM_GOLEADOR LIMIT 5;	
			
			ELSE
			
				SELECT X.ID_GOLEADOR, G.NM_GOLEADOR, X.QT_GOLS_MARCADOS, T.NM_TIME, T.DS_Tipo, G.NM_GOLEADOR_COMPLETO, fcGetCurrentPsnIDByTime(0,T.ID_TIME) as PSN_ID
				FROM (SELECT J.ID_GOLEADOR, J.ID_TIME, SUM(J.QT_GOLS) as QT_GOLS_MARCADOS
				FROM TB_GOLEADOR_JOGO J
				WHERE J.ID_CAMPEONATO IN (SELECT C.ID_CAMPEONATO FROM TB_CAMPEONATO C WHERE FIND_IN_SET(SG_TIPO_CAMPEONATO,fcGetAllSiglaByMode(pMode)))
				GROUP BY J.ID_GOLEADOR, J.ID_TIME) X, TB_GOLEADOR G, TB_TIME T
				WHERE G.ID_TIME IN (SELECT CT.ID_TIME FROM TB_CAMPEONATO_TIME CT, TB_CAMPEONATO C WHERE FIND_IN_SET(SG_TIPO_CAMPEONATO,fcGetAllSiglaByMode(pMode)) AND CT.ID_CAMPEONATO = C.ID_CAMPEONATO GROUP BY CT.ID_TIME)
				AND T.ID_TIME IN (_teamID,_nationalTeamID)
				AND X.ID_GOLEADOR = G.ID_GOLEADOR
				AND G.ID_TIME = T.ID_TIME
				AND X.ID_TIME= G.ID_TIME
				AND X.ID_TIME= T.ID_TIME
				ORDER BY X.QT_GOLS_MARCADOS DESC, G.NM_GOLEADOR;
			
			END IF;
		
		ELSE
		
			SET _teamID = fcGetCurrentIdTimePRO(pIdUsu);
			
			IF pInSummary = TRUE THEN
			
				SELECT X.ID_GOLEADOR, G.NM_GOLEADOR, X.QT_GOLS_MARCADOS, T.NM_TIME, T.DS_Tipo, G.NM_GOLEADOR_COMPLETO, fcGetCurrentPsnIDByTime(0,T.ID_TIME) as PSN_ID
				FROM (SELECT J.ID_GOLEADOR, J.ID_TIME, SUM(J.QT_GOLS) as QT_GOLS_MARCADOS
				FROM TB_GOLEADOR_JOGO J
				WHERE J.ID_CAMPEONATO IN (SELECT C.ID_CAMPEONATO FROM TB_CAMPEONATO C WHERE FIND_IN_SET(SG_TIPO_CAMPEONATO,fcGetAllSiglaByMode(pMode)))
				GROUP BY J.ID_GOLEADOR, J.ID_TIME) X, TB_GOLEADOR G, TB_TIME T
				WHERE G.ID_TIME IN (SELECT CT.ID_TIME FROM TB_CAMPEONATO_TIME CT, TB_CAMPEONATO C WHERE FIND_IN_SET(SG_TIPO_CAMPEONATO,fcGetAllSiglaByMode(pMode)) AND CT.ID_CAMPEONATO = C.ID_CAMPEONATO GROUP BY CT.ID_TIME)
				AND T.ID_TIME = _teamID
				AND X.ID_GOLEADOR = G.ID_GOLEADOR
				AND G.ID_TIME = T.ID_TIME
				AND X.ID_TIME= G.ID_TIME
				AND X.ID_TIME= T.ID_TIME
				ORDER BY X.QT_GOLS_MARCADOS DESC, G.NM_GOLEADOR LIMIT 5;	
			
			ELSE
			
				SELECT X.ID_GOLEADOR, G.NM_GOLEADOR, X.QT_GOLS_MARCADOS, T.NM_TIME, T.DS_Tipo, G.NM_GOLEADOR_COMPLETO, fcGetCurrentPsnIDByTime(0,T.ID_TIME) as PSN_ID
				FROM (SELECT J.ID_GOLEADOR, J.ID_TIME, SUM(J.QT_GOLS) as QT_GOLS_MARCADOS
				FROM TB_GOLEADOR_JOGO J
				WHERE J.ID_CAMPEONATO IN (SELECT C.ID_CAMPEONATO FROM TB_CAMPEONATO C WHERE FIND_IN_SET(SG_TIPO_CAMPEONATO,fcGetAllSiglaByMode(pMode)))
				GROUP BY J.ID_GOLEADOR, J.ID_TIME) X, TB_GOLEADOR G, TB_TIME T
				WHERE G.ID_TIME IN (SELECT CT.ID_TIME FROM TB_CAMPEONATO_TIME CT, TB_CAMPEONATO C WHERE FIND_IN_SET(SG_TIPO_CAMPEONATO,fcGetAllSiglaByMode(pMode)) AND CT.ID_CAMPEONATO = C.ID_CAMPEONATO GROUP BY CT.ID_TIME)
				AND T.ID_TIME = _teamID
				AND X.ID_GOLEADOR = G.ID_GOLEADOR
				AND G.ID_TIME = T.ID_TIME
				AND X.ID_TIME= G.ID_TIME
				AND X.ID_TIME= T.ID_TIME
				ORDER BY X.QT_GOLS_MARCADOS DESC, G.NM_GOLEADOR;
			
			END IF;

		END IF;
	
	END IF;

End$$
DELIMITER ;



DELIMITER $$
DROP PROCEDURE IF EXISTS `spGetSummaryModeratorMenu` $$
CREATE PROCEDURE `spGetSummaryModeratorMenu`()
begin      
	DECLARE _activeCoaches INTEGER DEFAULT 0;
	DECLARE _seasonCoaches INTEGER DEFAULT 0;
	DECLARE _stageNameSeriesH2H VARCHAR(50) DEFAULT "";
	DECLARE _seasonNameH2H VARCHAR(50) DEFAULT "";
	DECLARE _seasonNameFUT VARCHAR(50) DEFAULT "";
	DECLARE _seasonNamePRO VARCHAR(50) DEFAULT "";
	DECLARE _seasonID INTEGER DEFAULT 0;
	
	SET _seasonID = fcGetIdTempCurrent();

	SELECT NM_TEMPORADA into _seasonNameH2H
	FROM TB_TEMPORADA
	WHERE ID_TEMPORADA = _seasonID;
	
	SELECT COUNT(1) into _activeCoaches
	FROM TB_USUARIO
	WHERE fcGetIdUsuariosVazio(ID_USUARIO,'NOT')
	AND IN_USUARIO_ATIVO = True AND IN_DESEJA_PARTICIPAR = 1;
	
	SELECT COUNT(1) into _seasonCoaches
	FROM (SELECT ID_USUARIO FROM TB_CAMPEONATO_USUARIO 
	 WHERE ID_CAMPEONATO IN (SELECT ID_CAMPEONATO FROM TB_CAMPEONATO WHERE ID_TEMPORADA = _seasonID)
	 GROUP BY ID_USUARIO) as X;
	
	SELECT F.NM_FASE into _stageNameSeriesH2H
	FROM TB_TABELA_JOGO T, TB_FASE F
    WHERE T.ID_CAMPEONATO IN (SELECT ID_CAMPEONATO FROM TB_CAMPEONATO WHERE ID_TEMPORADA = _seasonID AND SG_TIPO_CAMPEONATO IN ('DIV1', 'DIV2', 'DIV3', 'DIV4'))
	AND T.QT_GOLS_TIME_CASA IS NULL 
	AND T.ID_FASE = F.ID_FASE
	ORDER BY T.DT_TABELA_INICIO_JOGO LIMIT 1;
	
	IF _stageNameSeriesH2H IS NULL THEN 
	
		SET _stageNameSeriesH2H = "Fase não encontrada";
	
	END IF;

	
	SELECT _activeCoaches as totalActiveCoaches, _seasonCoaches as totalSeasonCoaches,
		   _stageNameSeriesH2H as currentStageNameH2H, _seasonNameH2H as seasonNameH2H,
		   _seasonNameH2H as seasonNameFUT, _seasonNameH2H as seasonNamePRO;
   
End$$
DELIMITER ;


DELIMITER $$
DROP PROCEDURE IF EXISTS `spGetSummaryCurrentSeason` $$
CREATE PROCEDURE `spGetSummaryCurrentSeason`(pType VARCHAR(3))
begin      
	DECLARE _totalGoals INTEGER DEFAULT 0;
	DECLARE _totalGoalsHome INTEGER DEFAULT 0;
	DECLARE _totalGoalsAway INTEGER DEFAULT 0;
	DECLARE _totalMatchesHome INTEGER DEFAULT 0;
	DECLARE _totalMatchesAway INTEGER DEFAULT 0;
	DECLARE _totalMatches INTEGER DEFAULT 0;
	DECLARE _average INTEGER DEFAULT 0;
	
	SELECT SUM(T.QT_GOLS_TIME_CASA+T.QT_GOLS_TIME_VISITANTE), count(1) into _totalGoals, _totalMatches
	FROM TB_TABELA_JOGO T
	WHERE T.ID_CAMPEONATO IN (SELECT ID_CAMPEONATO FROM TB_CAMPEONATO WHERE ID_TEMPORADA = fcGetIdTempCurrent() AND FIND_IN_SET(SG_TIPO_CAMPEONATO,fcGetAllSiglaByMode(pType)))
	AND T.QT_GOLS_TIME_CASA IS NOT NULL;
	
	IF _totalMatches > 0 THEN
	
		SET _average = (_totalGoals DIV _totalMatches);
	
	END IF;
	
	SELECT _totalMatches as totalMatches,
		   COALESCE(_totalGoals, 0) as totalGoals, COALESCE(_average, 0) as averageGoals;
   
End$$
DELIMITER ;


DELIMITER $$
DROP PROCEDURE IF EXISTS `spGetDetailsMenuCurrentSeason` $$
CREATE PROCEDURE `spGetDetailsMenuCurrentSeason`(pType VARCHAR(3), pIdUsu INTEGER, pIdCamp INTEGER)
begin      
	DECLARE _idTime INTEGER DEFAULT 0;
	DECLARE _nmTime VARCHAR(50) DEFAULT "";
	DECLARE _idCamp INTEGER DEFAULT 0;
	DECLARE _nmCamp VARCHAR(50) DEFAULT "";
	DECLARE _sgCamp VARCHAR(30) DEFAULT "";
	DECLARE _idSeason INTEGER DEFAULT 0;
	DECLARE _nmTemp VARCHAR(50) DEFAULT "";
	DECLARE _campForGroup TINYINT DEFAULT NULL;
	DECLARE _campForGroupA TINYINT DEFAULT NULL;
	DECLARE _campForGroupB TINYINT DEFAULT NULL;
	DECLARE _idCampA INTEGER DEFAULT 0;
	DECLARE _idCampB INTEGER DEFAULT 0;
	DECLARE _sgCampA VARCHAR(4) DEFAULT "";
	DECLARE _sgCampB VARCHAR(4) DEFAULT "";
	DECLARE _userHasTeamFUT INTEGER DEFAULT 0;
	DECLARE _userHasTeamPRO INTEGER DEFAULT 0;
	
	IF pIdCamp = 0 THEN
	
		IF pType = 'H2H' THEN
			SET _idTime = fcGetCurrentIdTimeH2H(pIdUsu);
		ELSEIF pType = 'FUT' THEN
			SET _idTime = fcGetCurrentIdTimeFUT(pIdUsu);
		ELSEIF pType = 'PRO' THEN
			SET _idTime = fcGetCurrentIdTimePRO(pIdUsu);
		END IF;
	
	END IF;
	
	SET _idSeason = fcGetIdTempCurrent();
	
	IF pType = 'H2H' THEN
		SET _sgCampA = "DIV1";
		SET _sgCampB = "DIV2";
		SET _sgCamp = "DIV1,DIV2,DIV3,DIV4";
	ELSEIF pType = 'FUT' THEN
		SET _sgCampA = "FUT1";
		SET _sgCampB = "FUT2";
		SET _sgCamp = "FUT1,FUT2";
	ELSEIF pType = 'PRO' THEN
		SET _sgCampA = "PRO1";
		SET _sgCampB = "PRO2";
		SET _sgCamp = "PRO1,PRO2";
	END IF;

	IF _idTime IS NULL OR _idTime = 0 THEN
	
		IF pIdCamp = 0 THEN
	
			SELECT NM_CAMPEONATO, ID_CAMPEONATO, IN_CAMPEONATO_GRUPO into _nmCamp, _idCamp, _campForGroup FROM TB_CAMPEONATO
			WHERE ID_TEMPORADA = _idSeason AND SG_TIPO_CAMPEONATO = _sgCampA;
		
		ELSE
		
			SELECT NM_CAMPEONATO, ID_CAMPEONATO, IN_CAMPEONATO_GRUPO into _nmCamp, _idCamp, _campForGroup FROM TB_CAMPEONATO
			WHERE ID_TEMPORADA = _idSeason AND ID_CAMPEONATO = pIdCamp;
		
		END IF;
	
	ELSE
		
		SELECT C.NM_CAMPEONATO, C.ID_CAMPEONATO, C.IN_CAMPEONATO_GRUPO, I.NM_TIME into _nmCamp, _idCamp, _campForGroup, _nmTime
		FROM TB_CAMPEONATO C, TB_CAMPEONATO_TIME T, TB_TIME I
		WHERE C.ID_TEMPORADA = _idSeason AND FIND_IN_SET(C.SG_TIPO_CAMPEONATO,_sgCamp)
		  AND T.ID_TIME = _idTime AND C.ID_CAMPEONATO = T.ID_CAMPEONATO
		  AND T.ID_TIME = I.ID_TIME;
	
	END IF;
	
	SELECT NM_TEMPORADA into _nmTemp FROM TB_TEMPORADA WHERE ID_TEMPORADA = _idSeason;
	
	IF pIdCamp = 0 THEN 
	
		SELECT ID_CAMPEONATO, IN_CAMPEONATO_GRUPO into _idCampA, _campForGroupA FROM TB_CAMPEONATO 
		WHERE ID_TEMPORADA = _idSeason AND SG_TIPO_CAMPEONATO = _sgCampA;
		
		SELECT ID_CAMPEONATO, IN_CAMPEONATO_GRUPO into _idCampB , _campForGroupB FROM TB_CAMPEONATO 
		WHERE ID_TEMPORADA = _idSeason AND SG_TIPO_CAMPEONATO = _sgCampB;

	END IF;
	
	IF pIdUsu > 0 THEN
	
		IF pType = 'FUT' THEN

			SET _idTime = fcGetCurrentIdTimeFUT(pIdUsu);
			IF _idTime IS NOT NULL THEN
				IF _idTime > 0 THEN
					SET _userHasTeamFUT = 1;
				END IF;
			END IF;
		
		ELSEIF pType = 'PRO' THEN
	
			SET _idTime = fcGetCurrentIdTimePRO(pIdUsu);
			IF _idTime IS NOT NULL THEN
				IF _idTime > 0 THEN
					SET _userHasTeamPRO = 1;
				END IF;
			END IF;
		
		END IF;
	
	END IF;
		
	SELECT _nmTemp as seasonName, _idCamp as championshipID, _nmCamp as championshipName, _campForGroup as championchipForGroup, _nmTime as teamName, 
	      COALESCE(_idCampA, 0) as serieA, COALESCE(_idCampB, 0) as serieB, COALESCE(_campForGroupA, 0) as serieAForGroup, COALESCE(_campForGroupB, 0) as serieBForGroup,
		  _userHasTeamFUT as userHasTeamFUT, _userHasTeamPRO as userHasTeamPRO;
   
End$$
DELIMITER ;



DELIMITER $$
DROP PROCEDURE IF EXISTS `spGetFirstClassificacaoTimeOfCampeonatoForSummary` $$
CREATE PROCEDURE `spGetFirstClassificacaoTimeOfCampeonatoForSummary`(    
    pIdCamp INTEGER
)
begin  
	select C.ID_CAMPEONATO, C.QT_PONTOS_GANHOS, T.NM_TIME, T.DS_TIPO, T.DS_URL_TIME, U.PSN_ID, T.IN_TIME_EXCLUIDO_TEMP_ATUAL, C.ID_GRUPO
	from TB_CLASSIFICACAO C, TB_TIME T, TB_USUARIO_TIME UT, TB_USUARIO U 
	where C.ID_CAMPEONATO = pIdCamp
	and UT.DT_VIGENCIA_FIM is null
	and C.ID_TIME = T.ID_TIME 
	and C.ID_CAMPEONATO = UT.ID_CAMPEONATO
	and T.ID_TIME = UT.ID_TIME
	and UT.ID_USUARIO = U.ID_USUARIO
	order by C.ID_GRUPO, C.QT_PONTOS_GANHOS desc, C.QT_VITORIAS desc, (C.QT_GOLS_PRO-C.QT_GOLS_CONTRA) desc, C.QT_GOLS_PRO desc, C.QT_GOLS_CONTRA, T.NM_TIME LIMIT 5;      
End$$
DELIMITER ;


DELIMITER $$
DROP PROCEDURE IF EXISTS `spGetSummaryGenerateRenwal` $$
CREATE PROCEDURE `spGetSummaryGenerateRenwal`()
begin      
	DECLARE _seasonH2HID INTEGER DEFAULT 0;
	DECLARE _seasonH2HName VARCHAR(50) DEFAULT "";
	DECLARE _totalUsersBcoOnLine INTEGER DEFAULT 0;
	DECLARE _totalUsersBcoStaging INTEGER DEFAULT 0;
	DECLARE _lastSeasonH2HID INTEGER DEFAULT 0;
	DECLARE _totalUsersRenewal INTEGER DEFAULT 0;
	DECLARE _totalEmailsRenewal INTEGER DEFAULT 0;
	DECLARE _processID INTEGER DEFAULT 0;
	DECLARE _lastSeasonH2HName VARCHAR(50) DEFAULT "";
	DECLARE _totalRenewals INTEGER DEFAULT 0;
	DECLARE _totalSpoolerEmails INTEGER DEFAULT 0;
	DECLARE _totalAux INTEGER DEFAULT 0;
	DECLARE _isPreparedBefore INTEGER DEFAULT 0;

	SET _seasonH2HID = fcGetIdTempCurrent();

	SELECT ID_TEMPORADA, NM_TEMPORADA into _seasonH2HID, _seasonH2HName
	FROM TB_TEMPORADA
	WHERE ID_TEMPORADA = fcGetIdTempCurrent();
	
	SELECT count(1) into _totalUsersBcoOnLine
	FROM TB_USUARIO
	WHERE ID_USUARIO > 1 AND IN_USUARIO_ATIVO = true
	AND fcGetIdUsuariosVazio(ID_USUARIO,'NOT');

	SELECT count(1) into _totalUsersBcoStaging
	FROM arenafifadb_staging.TB_USUARIO
	WHERE ID_USUARIO > 1 AND IN_USUARIO_ATIVO = true
	AND fcGetIdUsuariosVazio(ID_USUARIO,'NOT');

	SELECT ID_TEMPORADA, NM_TEMPORADA into _lastSeasonH2HID, _lastSeasonH2HName
	FROM TB_TEMPORADA
	WHERE ID_TEMPORADA < _seasonH2HID
	ORDER BY ID_TEMPORADA DESC LIMIT 1;
	
	SELECT count(1) into _totalUsersRenewal
	FROM arenafifadb_staging.TB_CONFIRMACAO_TEMPORADA WHERE ID_TEMPORADA = (_seasonH2HID + 1);

	SELECT ID_PROCESSO into _processID FROM arena_spooler.TB_SPOOLER_PROCESSOS_EMAIL
	WHERE SL_PROCESSO = 'SPOOLER_NOVA_TEMPORADA'
	ORDER BY ID_PROCESSO DESC LIMIT 1;

	SELECT count(1) into _totalEmailsRenewal
	FROM arena_spooler.TB_PROCESSOS_EMAIL_DETALHE WHERE ID_PROCESSO = _processID;

	SELECT count(1) into _totalSpoolerEmails FROM arena_spooler.TB_SPOOLER_PROCESSOS_EMAIL
	WHERE SL_PROCESSO = 'SPOOLER_NOVA_TEMPORADA';
	
	SELECT count(1) into _totalRenewals FROM arenafifadb_staging.TB_CONFIRMACAO_TEMPORADA;

	SELECT count(1) into _totalAux FROM arenafifadb_staging.TB_USUARIO;
	IF _totalAux > 0 THEN
		SET _isPreparedBefore = 1;
	END IF;


	SELECT _seasonH2HID as seasonH2HID, _seasonH2HName as seasonH2HName,
		   _seasonH2HID as seasonFUTID, _seasonH2HName as seasonFUTName,
		   _seasonH2HID as seasonPROID, _seasonH2HName as seasonPROName,
		   _totalUsersBcoOnLine as totalUsersBcoOnLine, _totalUsersBcoStaging as totalUsersBcoStaging,
		   _lastSeasonH2HID as lastSeasonH2HID, _lastSeasonH2HName as lastSeasonH2HName,
		   _lastSeasonH2HID as lastSeasonFUTID, _lastSeasonH2HName as lastSeasonFUTName,
		   _lastSeasonH2HID as lastSeasonPROID, _lastSeasonH2HName as lastSeasonPROName,
		   _totalUsersRenewal as totalUsersRenewal, _totalEmailsRenewal as totalEmailsRenewal,
		   _totalRenewals as totalRenewals, _totalSpoolerEmails as totalSpoolerEmails,
		   _isPreparedBefore as isPreparedBefore;
   
End$$
DELIMITER ;