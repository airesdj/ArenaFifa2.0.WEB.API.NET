USE `arenafifadb`;

ALTER TABLE TB_RESULTADOS_LANCADOS MODIFY DT_LANCAMENTO DATE;

DELIMITER $$
DROP PROCEDURE IF EXISTS `spGetLastResultadosLancados` $$
CREATE PROCEDURE `spGetLastResultadosLancados`()
Begin
	SELECT * FROM TB_RESULTADOS_LANCADOS ORDER BY DT_LANCAMENTO desc, DS_DT_LANCAMENTO desc LIMIT 8;
End$$
DELIMITER ;



DELIMITER $$
DROP PROCEDURE IF EXISTS `spDeleteResultadoLancado` $$
CREATE PROCEDURE `spDeleteResultadoLancado`(pIdJogo INTEGER)
Begin
	DELETE FROM TB_RESULTADOS_LANCADOS WHERE ID_TABELA_JOGO = pIdJogo;
End$$
DELIMITER ;


DELIMITER $$
DROP PROCEDURE IF EXISTS `spAddUpdateResultadoLancado` $$
CREATE PROCEDURE `spAddUpdateResultadoLancado`(
	pDataLanc DATE, 
	pIdJogo INTEGER,
	pTpLanc VARCHAR(15),
	pIdCamp INTEGER,
	pDsDtLanc VARCHAR(50),
	pNmCamp VARCHAR(50),
	pDsResult VARCHAR(100),
	pDsJogo VARCHAR(100),
	pDsExecutor VARCHAR(100)
)
Begin
	DECLARE _count INTEGER DEFAULT 0;
	
	SELECT COUNT(1) into _count
	FROM TB_RESULTADOS_LANCADOS
	WHERE DT_LANCAMENTO = pDataLanc
	AND ID_TABELA_JOGO = pIdJogo;
	
	IF _count > 0 THEN
	
		UPDATE TB_RESULTADOS_LANCADOS
		SET TP_LANCAMENTO = pTpLanc,
		    ID_CAMPEONATO = pIdCamp,
			DS_DT_LANCAMENTO = pDsDtLanc,
			NM_CAMPEONATO = pNmCamp,
			DS_TABELA_JOGO_RESULTADO = pDsResult,
			DS_TABELA_JOGO_TECNICOS = pDsJogo,
			DS_TECNICO_EXECUTOR = pDsExecutor
		WHERE DT_LANCAMENTO = pDataLanc
		AND ID_TABELA_JOGO = pIdJogo;
	
	ELSE
	
		INSERT INTO TB_RESULTADOS_LANCADOS (DT_LANCAMENTO, ID_TABELA_JOGO, TP_LANCAMENTO, ID_CAMPEONATO, DS_DT_LANCAMENTO, NM_CAMPEONATO,  
											DS_TABELA_JOGO_RESULTADO, DS_TABELA_JOGO_TECNICOS, DS_TECNICO_EXECUTOR)
		VALUES (CURDATE(), pIdJogo, pTpLanc, pIdCamp, pDsDtLanc, pNmCamp, pDsResult, pDsJogo, pDsExecutor);
	
	END IF;
	
End$$
DELIMITER ;
