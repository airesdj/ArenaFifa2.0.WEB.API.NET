USE `arenafifadb`;

ALTER TABLE TB_HISTORICO_TRANSMISSAO_AOVIVO MODIFY DT_JOGO DATE;


DELIMITER $$
DROP PROCEDURE IF EXISTS `spGetAllTransmissaoAoVivoByDay` $$
CREATE PROCEDURE `spGetAllTransmissaoAoVivoByDay`(pData DATE)
begin      
	select H.*, DATE_FORMAT(H.DT_JOGO,'%d/%m/%Y') as DT_JOGO_FORMATADA, C.NM_Campeonato, C.IN_Console, T.ID_Fase, T.IN_NUMERO_RODADA, F.NM_Fase,
		  T1.NM_Time as NM_T1, T2.NM_Time as NM_T2, T1.DS_TIPO as DS_T1, T2.DS_TIPO as DS_T2, C.ID_Temporada
	from TB_HISTORICO_TRANSMISSAO_AOVIVO H, TB_CAMPEONATO C, TB_TABELA_JOGO T, TB_TIME T1, TB_TIME T2, TB_FASE F
	where H.DT_JOGO = pData
    and H.ID_CAMPEONATO = C.ID_CAMPEONATO
	AND H.ID_CAMPEONATO = T.ID_CAMPEONATO
	AND H.ID_TABELA_JOGO = T.ID_TABELA_JOGO
	AND C.ID_CAMPEONATO = T.ID_CAMPEONATO
	AND T.ID_TIME_CASA = T1.ID_TIME
	AND T.ID_TIME_VISITANTE = T2.ID_TIME
	AND T.ID_FASE = F.ID_FASE;
End$$
DELIMITER ;



DELIMITER $$
DROP PROCEDURE IF EXISTS `spGetAllTransmissaoAoVivoByCampeonato` $$
CREATE PROCEDURE `spGetAllTransmissaoAoVivoByCampeonato`(
	pIdCamp INTEGER,
	pIdJogo INTEGER,
)
begin      
	select H.*, DATE_FORMAT(H.DT_JOGO,'%d/%m/%Y') as DT_JOGO_FORMATADA, C.NM_Campeonato, C.IN_Console, T.ID_Fase, T.IN_NUMERO_RODADA, F.NM_Fase,
		  T1.NM_Time as NM_T1, T2.NM_Time as NM_T2, T1.DS_TIPO as DS_T1, T2.DS_TIPO as DS_T2, C.ID_Temporada
	from TB_HISTORICO_TRANSMISSAO_AOVIVO H, TB_CAMPEONATO C, TB_TABELA_JOGO T, TB_TIME T1, TB_TIME T2, TB_FASE F
	where H.ID_CAMPEONATO = pIdCamp
	and H.ID_TABELA_JOGO = pIdJogo
    and H.ID_CAMPEONATO = C.ID_CAMPEONATO
	AND H.ID_CAMPEONATO = T.ID_CAMPEONATO
	AND H.ID_TABELA_JOGO = T.ID_TABELA_JOGO
	AND C.ID_CAMPEONATO = T.ID_CAMPEONATO
	AND T.ID_TIME_CASA = T1.ID_TIME
	AND T.ID_TIME_VISITANTE = T2.ID_TIME
	AND T.ID_FASE = F.ID_FASE;
End$$
DELIMITER ;


DELIMITER $$
DROP PROCEDURE IF EXISTS `spAddUpdateTransmissaoAoVivo` $$
CREATE PROCEDURE `spAddUpdateTransmissaoAoVivo`(
	pIdCamp INTEGER,
	pIdJogo INTEGER,
	pIdUsu INTEGER,
	pIdTime INTEGER,
	pDsLink VARCHAR(250),
	pDtJogo DATE,
	pHrJogo VARCHAR(5)
)
begin
	DECLARE _count INTEGER DEFAULT 0;
	
	select count(1) into _count from TB_HISTORICO_TRANSMISSAO_AOVIVO
	where ID_CAMPEONATO = pIdCamp
	and ID_TABELA_JOGO = pIdJogo;
	
	IF (_count>0) THEN
	
		update TB_HISTORICO_TRANSMISSAO_AOVIVO
		set ID_USUARIO = pIdUsu,
		    ID_TIME = pIdTime,
			DS_URL_LINK_AOVIVO = pDsLink,
			DT_JOGO = pDtJogo,
			HR_JOGO = pHrJogo
		where ID_CAMPEONATO = pIdCamp
		and ID_TABELA_JOGO = pIdJogo;
	
	ELSE
	
		insert into TB_HISTORICO_TRANSMISSAO_AOVIVO (ID_CAMPEONATO, ID_TABELA_JOGO, ID_USUARIO, ID_TIME, DS_URL_LINK_AOVIVO, DT_JOGO, HR_JOGO)
		values (pIdCamp, pIdJogom pIdUsu, pIdTime, pDsLink, pDtJogo, pHrJogo);
	
	END IF;
	
	UPDATE TB_USUARIO SET DS_URL_LINK_AOVIVO = pDsLink
	WHERE ID_USUARIO = pIdUsu;
	
End$$
DELIMITER ;



DELIMITER $$
DROP PROCEDURE IF EXISTS `spDeleteTransmissaoAoVivo` $$
CREATE PROCEDURE `spDeleteTransmissaoAoVivo`(pIdCamp INTEGER, pIdJogo INTEGER)
begin      
   delete from TB_HISTORICO_TRANSMISSAO_AOVIVO
   where ID_CAMPEONATO = pIdCamp
   and ID_TABELA_JOGO = pIdJogo;
End$$
DELIMITER ;


